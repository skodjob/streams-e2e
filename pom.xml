<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.streams</groupId>
    <artifactId>streams-e2e</artifactId>
    <version>1.0-SNAPSHOT</version>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/skodjob/streams-e2e/issues</url>
    </issueManagement>

    <properties>
        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <test-frame.version>0.2.1</test-frame.version>
        <fabric8.version>6.13.1</fabric8.version>
        <log4j.version>2.23.1</log4j.version>
        <slf4j.version>2.0.13</slf4j.version>

        <junit.jupiter.version>5.10.3</junit.jupiter.version>
        <junit.platform.version>1.10.3</junit.platform.version>
        <maven.surefire.version>3.3.1</maven.surefire.version>

        <!--   Build tools' properties     -->
        <spotbugs.version>4.8.6</spotbugs.version>
        <maven.spotbugs.version>4.8.6.2</maven.spotbugs.version>
        <maven.checkstyle.version>3.4.0</maven.checkstyle.version>
        <maven.compile.plugin.version>3.13.0</maven.compile.plugin.version>
        <maven.dependency.version>3.7.0</maven.dependency.version>
        <maven.download.plugin.version>1.9.0</maven.download.plugin.version>

        <skipITs>true</skipITs>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.skodjob</groupId>
            <artifactId>test-frame-common</artifactId>
            <version>${test-frame.version}</version>
        </dependency>
        <dependency>
            <groupId>io.skodjob</groupId>
            <artifactId>test-frame-kubernetes</artifactId>
            <version>${test-frame.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.skodjob</groupId>
            <artifactId>test-frame-openshift</artifactId>
            <version>${test-frame.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.skodjob</groupId>
            <artifactId>test-frame-log-collector</artifactId>
            <version>${test-frame.version}</version>
        </dependency>
        <dependency>
            <groupId>io.skodjob</groupId>
            <artifactId>test-frame-metrics-collector</artifactId>
            <version>${test-frame.version}</version>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-client</artifactId>
            <version>${fabric8.version}</version>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model</artifactId>
            <version>${fabric8.version}</version>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-core</artifactId>
            <version>${fabric8.version}</version>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client-api</artifactId>
            <version>${fabric8.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>${junit.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>${junit.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.surefire.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>${spotbugs.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compile.plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>-proc:full</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>verify</goal>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipITs>${skipITs}</skipITs>
                    <forkCount>1</forkCount>
                    <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
                    <includes>
                        <include>**/IT*.java</include>
                        <include>**/*IT.java</include>
                        <include>**/ST*.java</include>
                        <include>**/*ST.java</include>
                    </includes>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.extensions.autodetection.enabled = true
                        </configurationParameters>
                    </properties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.version}</version>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                            <ignoredUnusedDeclaredDependencies>
                                <!-- Needed for logging in tests used by test-frame (uses SLF4J) -->
                                <ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-slf4j2-impl</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>io.fabric8:kubernetes-server-mock</ignoredUnusedDeclaredDependency>
                                <!-- Temporary exclusion as it will be needed when we start write something -->
                                <ignoredUnusedDeclaredDependency>io.skodjob:test-frame-metrics-collector</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>io.fabric8:openshift-client</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>io.fabric8:kubernetes-model</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.junit.jupiter:junit-jupiter-engine</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.junit.jupiter:junit-jupiter-params</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.junit.platform:junit-platform-commons</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.junit.platform:junit-platform-engine</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.apache.maven.plugins:maven-failsafe-plugin</ignoredUnusedDeclaredDependency>
                            </ignoredUnusedDeclaredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <configLocation>.checkstyle/checkstyle.xml</configLocation>
                            <suppressionsLocation>.checkstyle/suppressions.xml</suppressionsLocation>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${maven.spotbugs.version}</version>
                <dependencies>
                    <!-- overwrite dependency on spotbugs if you want to specify the version of˓→spotbugs -->
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <effort>Max</effort>
                    <!-- Reports all bugs (other values are medium and max) -->
                    <threshold>Low</threshold>
                    <!-- Produces XML report -->
                    <xmlOutput>true</xmlOutput>
                    <!-- Configures the directory in which the XML report is created -->
                    <spotbugsXmlOutputDirectory>${project.build.directory}/spotbugs</spotbugsXmlOutputDirectory>
                    <!-- Configures the file for excluding warnings -->
                    <excludeFilterFile>${project.basedir}/.spotbugs/spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>test</id>
            <properties>
                <skipITs>false</skipITs>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>get-operator-files</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>download-maven-plugin</artifactId>
                        <version>${maven.download.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>get-strimzi</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>wget</goal>
                                </goals>
                                <configuration>
                                    <url>https://github.com/strimzi/strimzi-kafka-operator/releases/download/0.42.0/strimzi-0.42.0.tar.gz</url>
                                    <outputDirectory>${basedir}/operator-install-files/</outputDirectory>
                                    <outputFileName>strimzi.tar.gz</outputFileName>
                                    <unpack>true</unpack>
                                    <fileMappers>
                                        <org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                                            <pattern>^strimzi-\d+.\d+.\d+</pattern>
                                            <replacement>strimzi-kafka-operator</replacement>
                                        </org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                                    </fileMappers>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <overwrite>true</overwrite>
                            <failOnError>false</failOnError>
                            <skipCache>true</skipCache>
                            <retries>2</retries>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
